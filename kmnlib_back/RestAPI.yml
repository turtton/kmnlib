openapi: 3.0.3

info:
  title: KMNLib RestAPI
  version: "1.0.0"
  description: |
    note: Auth system is not implemented.

servers:
  - url: /api/v1

tags:
  - name: "User"
    description: "User API"
  - name: "Book"
    description: "Book API"

paths:
  "/users":
    get:
      tags:
        - "User"
      summary: "Get all users"
      description: ""
      operationId: "getUsers"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "User"
      summary: "Create users"
      description: ""
      operationId: "createUsers"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "Invalid status value"
  "/users/{id}":
    get:
      tags:
        - "User"
      summary: "Get user by id"
      description: ""
      operationId: "getUserById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "Invalid status value"
        "404":
          description: "User not found"
  "/users/{id}/rent":
    get:
      tags:
        - "User"
      summary: "Get user rent books"
      description: ""
      operationId: "getUserRentBooks"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: "Invalid status value"
        "404":
          description: "User not found"
    post:
      tags:
        - "User"
      summary: "Rent book"
      description: ""
      operationId: "rentBook"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                book_id:
                  type: integer
                  format: int64
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
        "404":
          description: "User not found"
  "/books":
    get:
      tags:
        - "Book"
      summary: "Get all books"
      description: ""
      operationId: "getBooks"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: "Invalid status value"
    post:
      tags:
        - "Book"
      summary: "Create books"
      description: ""
      operationId: "createBooks"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: "Invalid status value"
  "/books/{id}":
    get:
      tags:
        - "Book"
      summary: "Get book by id"
      description: ""
      operationId: "getBookById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of book to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: "Invalid status value"
        "404":
          description: "Book not found"
  "/books/{id}/rent":
    get:
      tags:
        - "Book"
      summary: "Get book rent users"
      description: ""
      operationId: "getBookRentUsers"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of book to return"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: "Invalid status value"
        "404":
          description: "Book not found"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        rent_limit:
          type: integer
          format: int64
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        amount:
          type: integer
          format: int64